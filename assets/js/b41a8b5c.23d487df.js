"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[277],{620:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"api/Layer3D","title":"Layer3D","description":"Layer3D is a layer for a 3D plotter. Layers are added via the Plotter3D.add_layer method.","source":"@site/docs/api/Layer3D.mdx","sourceDirName":"api","slug":"/api/Layer3D","permalink":"/gcode2dplotterart/docs/api/Layer3D","draft":false,"unlisted":false,"editUrl":"https://github.com/TravisBumgarner/gcode2dplotterart/tree/main/gcode2dplotterart-website/docs/api/Layer3D.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Layer2D","permalink":"/gcode2dplotterart/docs/api/Layer2D"},"next":{"title":"Plotter2D","permalink":"/gcode2dplotterart/docs/api/Plotter2D"}}');var i=n(4848),r=n(8453);const l={},s="Layer3D",a={},d=[{value:"<strong>init</strong>",id:"init",level:2},{value:"add_circle",id:"add_circle",level:2},{value:"add_comment",id:"add_comment",level:2},{value:"add_line",id:"add_line",level:2},{value:"add_path",id:"add_path",level:2},{value:"add_point",id:"add_point",level:2},{value:"add_rectangle",id:"add_rectangle",level:2},{value:"add_text",id:"add_text",level:2},{value:"get_min_and_max_points",id:"get_min_and_max_points",level:2},{value:"get_plotting_data",id:"get_plotting_data",level:2},{value:"preview_paths",id:"preview_paths",level:2},{value:"save",id:"save",level:2},{value:"set_feed_rate",id:"set_feed_rate",level:2},{value:"set_mode_to_navigation",id:"set_mode_to_navigation",level:2},{value:"set_mode_to_plotting",id:"set_mode_to_plotting",level:2}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"layer3d",children:"Layer3D"})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"Layer3D"})," is a layer for a 3D plotter. Layers are added via the ",(0,i.jsx)(t.code,{children:"Plotter3D.add_layer"})," method."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"Layer3D"})," extends from the abstract class ",(0,i.jsx)(t.code,{children:"Layer"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"init",children:(0,i.jsx)(t.strong,{children:"init"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"__init__(\nself, plotter_x_min: float, plotter_y_min: float, plotter_x_max: float, plotter_y_max: float, z_plotting_height: float, z_navigation_height: float, feed_rate: float, handle_out_of_bounds: Union[Literal['Warning'], Literal['Error']], color: Optional[str], line_width: float, include_comments: bool, preview_only: bool = False )\n ->  None\n"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Args:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"plotter_x_min (float) : The minimum X-coordinate of the plotter."}),"\n",(0,i.jsx)(t.li,{children:"plotter_y_min (float) : The minimum Y-coordinate of the plotter."}),"\n",(0,i.jsx)(t.li,{children:"plotter_x_max (float) : The maximum X-coordinate of the plotter."}),"\n",(0,i.jsx)(t.li,{children:"plotter_y_max (float) : The maximum Y-coordinate of the plotter."}),"\n",(0,i.jsxs)(t.li,{children:["z_plotting_height (float) : The height of the\n",(0,i.jsx)(t.a,{href:"https://travisbumgarner.github.io/gcode2dplotterart/docs/documentation/terminology#instruction-phase",children:"plotting instrument"})," when plotting on the\n",(0,i.jsx)(t.a,{href:"https://travisbumgarner.github.io/gcode2dplotterart/docs/documentation/terminology#plotting-instrument",children:"plotting surface"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["z_navigation_height (float) : The height of the\n",(0,i.jsx)(t.a,{href:"https://travisbumgarner.github.io/gcode2dplotterart/docs/documentation/terminology#instruction-phase",children:"plotting instrument"}),"\nwhen navigating to a new location."]}),"\n",(0,i.jsxs)(t.li,{children:["feed_rate (float) : The ",(0,i.jsx)(t.a,{href:"https://travisbumgarner.github.io/gcode2dplotterart/docs/documentation/terminology#feed-rate",children:"feed rate"})," for the plotter."]}),"\n",(0,i.jsxs)(t.li,{children:["handle_out_of_bounds (",(0,i.jsx)(t.code,{children:"Warning"})," | ",(0,i.jsx)(t.code,{children:"Error"}),", optional):             How to handle out-of-bounds points.             ",(0,i.jsx)(t.code,{children:"Warning"})," will print a warning, skip the point, and continue.             ",(0,i.jsx)(t.code,{children:"Error"})," will throw an error and stop.             Defaults to ",(0,i.jsx)(t.code,{children:"Warning"}),"."]}),"\n",(0,i.jsx)(t.li,{children:"color (str, optional) : The color of the layer. Defaults to a random color."}),"\n",(0,i.jsx)(t.li,{children:"line_width (float) : The width of the line being plotted."}),"\n",(0,i.jsxs)(t.li,{children:["preview_only (bool, optional) : If true, the layer will not be plotted. Defaults to ",(0,i.jsx)(t.code,{children:"False"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["include_comments (bool, optional) : Whether to include comments in the G-Code files. Useful for learning about G-Code and debugging.             Defaults to ",(0,i.jsx)(t.code,{children:"True"}),"."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"add_circle",children:"add_circle"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"add_circle(\nself, x_center: float, y_center: float, radius: float, num_points: int = 36, raise_plotter_head_after_path: bool = True, instruction_phase: Union[Literal['setup'], Literal['plotting'], Literal['teardown']] = 'plotting' )\n ->  Self\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Adds a circle to the layer. ",(0,i.jsx)(t.code,{children:"add_circle"})," calls ",(0,i.jsx)(t.code,{children:"add_path"})," under the hood, for more control, use ",(0,i.jsx)(t.code,{children:"add_path"})," directly."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Args:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"x_center (float) : The x-coordinate of the center of the circle."}),"\n",(0,i.jsx)(t.li,{children:"y_center (float) : The y-coordinate of the center of the circle."}),"\n",(0,i.jsx)(t.li,{children:"radius (float) : The radius of the circle."}),"\n",(0,i.jsxs)(t.li,{children:["num_points (int) : The number of points to use to approximate the circle. More points leads to a circle with less visible straight lines.\nDefaults to ",(0,i.jsx)(t.code,{children:"36"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["raise_plotter_head_after_path (bool, optional) : Whether to raise the plotter head after the path is complete. Useful to set to False if subsequent\npaths are plotted nearby. Defaults to ",(0,i.jsx)(t.code,{children:"True"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["instruction_phase (",(0,i.jsx)(t.code,{children:"setup"})," | ",(0,i.jsx)(t.code,{children:"plotting"})," | ",(0,i.jsx)(t.code,{children:"teardown"}),", optional):\nThe ",(0,i.jsx)(t.a,{href:"https://travisbumgarner.github.io/gcode2dplotterart/docs/documentation/terminology#instruction-phase",children:"instruction phase"}),"\nof plotting to send the instruction to. Defaults to ",(0,i.jsx)(t.code,{children:"plotting"}),"."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Layer : The Layer object. Allows for chaining of add methods."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"add_comment",children:"add_comment"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"add_comment(\nself, text: str, instruction_phase: Union[Literal['setup'], Literal['plotting'], Literal['teardown']] )\n ->  Self\n"})}),"\n",(0,i.jsx)(t.p,{children:"Add a comment to the layer."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Args:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"text (str): The text to add."}),"\n",(0,i.jsxs)(t.li,{children:["instruction_phase (",(0,i.jsx)(t.code,{children:"setup"})," | ",(0,i.jsx)(t.code,{children:"plotting"})," | ",(0,i.jsx)(t.code,{children:"teardown"}),", optional):\nThe ",(0,i.jsx)(t.a,{href:"https://travisbumgarner.github.io/gcode2dplotterart/docs/documentation/terminology#instruction-phase",children:"instruction phase"}),"\nof plotting to send the instruction to. Defaults to ",(0,i.jsx)(t.code,{children:"plotting"}),"."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Layer: The Layer object. Allows for chaining of add methods."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"add_line",children:"add_line"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"add_line(\nself, x_start: float, y_start: float, x_end: float, y_end: float, raise_plotter_head_after_path: bool = True, instruction_phase: Union[Literal['setup'], Literal['plotting'], Literal['teardown']] = 'plotting' )\n ->  Self\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Add a line to the layer. ",(0,i.jsx)(t.code,{children:"add_line"})," calls ",(0,i.jsx)(t.code,{children:"add_path"})," under the hood, for more control, use ",(0,i.jsx)(t.code,{children:"add_path"})," directly."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Args:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"x_start (float) : The x-coordinate of the starting point of the line."}),"\n",(0,i.jsx)(t.li,{children:"y_start (float) : The y-coordinate of the starting point of the line."}),"\n",(0,i.jsx)(t.li,{children:"x_end (float) : The x-coordinate of the ending point of the line."}),"\n",(0,i.jsx)(t.li,{children:"y_end (float) : The y-coordinate of the ending point of the line."}),"\n",(0,i.jsxs)(t.li,{children:["raise_plotter_head_after_path (bool, optional) : Whether to raise the plotter head after the path is complete. Useful to set to False if subsequent\npaths are plotted nearby. Defaults to ",(0,i.jsx)(t.code,{children:"True"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["instruction_phase (",(0,i.jsx)(t.code,{children:"setup"})," | ",(0,i.jsx)(t.code,{children:"plotting"})," | ",(0,i.jsx)(t.code,{children:"teardown"}),", optional) :\nThe ",(0,i.jsx)(t.a,{href:"https://travisbumgarner.github.io/gcode2dplotterart/docs/documentation/terminology#instruction-phase",children:"instruction phase"}),"\nof plotting to send the instruction to. Defaults to ",(0,i.jsx)(t.code,{children:"plotting"}),"."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"add_path",children:"add_path"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"add_path(\nself, points: List[Tuple[float, float]], raise_plotter_head_after_path: bool = True, instruction_phase: Union[Literal['setup'], Literal['plotting'], Literal['teardown']] = 'plotting' )\n ->  Self\n"})}),"\n",(0,i.jsx)(t.p,{children:"Add a path to the layer. A path is a series of points that are connected by lines."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Args:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"points (List[Tuple[float, float]]) : An array of (x,y) points to add."}),"\n",(0,i.jsxs)(t.li,{children:["raise_plotter_head_after_path (bool, optional) : Whether to raise the plotter head after the path is complete. Useful to set to False if subsequent\npaths are plotted nearby. Defaults to ",(0,i.jsx)(t.code,{children:"True"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["instruction_phase (",(0,i.jsx)(t.code,{children:"setup"})," | ",(0,i.jsx)(t.code,{children:"plotting"})," | ",(0,i.jsx)(t.code,{children:"teardown"}),", optional) : The instruction\nphase of plotting to send the instruction to. Defaults to ",(0,i.jsx)(t.code,{children:"plotting"}),"."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Layer : The Layer object. Allows for chaining of add methods."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"add_point",children:"add_point"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"add_point(\nself, x: float, y: float, raise_plotter_head_after_path: bool = True, instruction_phase: Union[Literal['setup'], Literal['plotting'], Literal['teardown']] = 'plotting' )\n ->  Self\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Add a point to the layer. ",(0,i.jsx)(t.code,{children:"add_point"})," calls ",(0,i.jsx)(t.code,{children:"add_path"})," under the hood, for more control, use ",(0,i.jsx)(t.code,{children:"add_path"})," directly."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Args:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"x (float) : The x-coordinate of the point."}),"\n",(0,i.jsx)(t.li,{children:"y (float) : The y-coordinate of the point."}),"\n",(0,i.jsxs)(t.li,{children:["raise_plotter_head_after_path (bool, optional) : Whether to raise the plotter head after the path is complete. Useful to set to False if subsequent\npaths are plotted nearby. Defaults to ",(0,i.jsx)(t.code,{children:"True"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["instruction_phase (",(0,i.jsx)(t.code,{children:"setup"})," | ",(0,i.jsx)(t.code,{children:"plotting"})," | ",(0,i.jsx)(t.code,{children:"teardown"}),", optional):\nThe ",(0,i.jsx)(t.a,{href:"https://travisbumgarner.github.io/gcode2dplotterart/docs/documentation/terminology#instruction-phase",children:"instruction phase"}),"\nof plotting to send the instruction to. Defaults to ",(0,i.jsx)(t.code,{children:"plotting"}),"."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Layer : The Layer object. Allows for chaining of add methods."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"add_rectangle",children:"add_rectangle"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"add_rectangle(\nself, x_start: float, y_start: float, x_end: float, y_end: float, raise_plotter_head_after_path: bool = True, instruction_phase: Union[Literal['setup'], Literal['plotting'], Literal['teardown']] = 'plotting' )\n ->  Self\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Adds a rectangle to the layer.  ",(0,i.jsx)(t.code,{children:"add_rectangle"})," calls ",(0,i.jsx)(t.code,{children:"add_path"})," under the hood, for more control, use ",(0,i.jsx)(t.code,{children:"add_path"})," directly."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Args:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"x_start (float) : The x-coordinate of the starting point of the rectangle."}),"\n",(0,i.jsx)(t.li,{children:"y_start (float) : The y-coordinate of the starting point of the rectangle."}),"\n",(0,i.jsx)(t.li,{children:"x_end (float) : The x-coordinate of the ending point of the rectangle."}),"\n",(0,i.jsx)(t.li,{children:"y_end (float) : The y-coordinate of the ending point of the rectangle."}),"\n",(0,i.jsxs)(t.li,{children:["raise_plotter_head_after_path (bool, optional) : Whether to raise the plotter head after the path is complete. Useful to set to False if subsequent\npaths are plotted nearby. Defaults to ",(0,i.jsx)(t.code,{children:"True"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["instruction_phase (",(0,i.jsx)(t.code,{children:"setup"})," | ",(0,i.jsx)(t.code,{children:"plotting"})," | ",(0,i.jsx)(t.code,{children:"teardown"}),", optional) :\nThe ",(0,i.jsx)(t.a,{href:"https://travisbumgarner.github.io/gcode2dplotterart/docs/documentation/terminology#instruction-phase",children:"instruction phase"}),"\nof plotting to send the instruction to. Defaults to ",(0,i.jsx)(t.code,{children:"plotting"}),"."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Layer : The Layer object. Allows for chaining of add methods."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"add_text",children:"add_text"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"add_text(\nself, text: str, font_size: float, x_start: float, y_start: float, char_spacing: Optional[float] = None, point_offset: Optional[float] = None, instruction_phase: Union[Literal['setup'], Literal['plotting'], Literal['teardown']] = 'plotting' )\n ->  Self\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Adds a text to the layer. ",(0,i.jsx)(t.code,{children:"add_text"})," calls ",(0,i.jsx)(t.code,{children:"add_path"})," under the hood, for more control, use ",(0,i.jsx)(t.code,{children:"add_path"})," directly."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Args:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"text (str) : The text to add."}),"\n",(0,i.jsx)(t.li,{children:"font_size (float) : The height of each character of text in mm."}),"\n",(0,i.jsx)(t.li,{children:"x_start (float) : The x-coordinate of the starting point of the text. Located to the left of the text."}),"\n",(0,i.jsx)(t.li,{children:"y_start (float) : The y-coordinate of the starting point of the text. Located at the bottom of the text."}),"\n",(0,i.jsxs)(t.li,{children:["char_spacing (float) : The spacing between each character in mm. Defaults to layer ",(0,i.jsx)(t.code,{children:"line_width"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["point_offset (float, optional) : The offset of the point in the character, units are mm. Used for characters such as ",(0,i.jsx)(t.code,{children:"!"}),".\nDefaults to the layer ",(0,i.jsx)(t.code,{children:"line_width"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["instruction_phase (",(0,i.jsx)(t.code,{children:"setup"})," | ",(0,i.jsx)(t.code,{children:"plotting"})," | ",(0,i.jsx)(t.code,{children:"teardown"}),", optional):\nThe ",(0,i.jsx)(t.a,{href:"https://travisbumgarner.github.io/gcode2dplotterart/docs/documentation/terminology#instruction-phase",children:"instruction phase"}),"\nof plotting to send the instruction to. Defaults to ",(0,i.jsx)(t.code,{children:"plotting"}),"."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Layer : The Layer object. Allows for chaining of add methods."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"get_min_and_max_points",children:"get_min_and_max_points"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"get_min_and_max_points(\nself )\n ->  Dict[str, float]\n"})}),"\n",(0,i.jsx)(t.p,{children:"Find the min and max plot points of the layer."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"dict : x_min (float), y_min (float), x_max (float), y_max (float)\nA dictionary containing the min and max plot points of the layer."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"get_plotting_data",children:"get_plotting_data"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"get_plotting_data(\nself )\n ->  Dict[str, List[str]]\n"})}),"\n",(0,i.jsx)(t.p,{children:"Get current plotting data."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:['dict: "setup": [], "plotting": [], "teardown": []\nA dictionary containing\n',(0,i.jsx)(t.a,{href:"https://travisbumgarner.github.io/gcode2dplotterart/docs/documentation/terminology#instruction-phase",children:"instruction phases"})," - setup, plotting,\nand teardown as an array of G-Code instruction strings per layer. Mostly used for testing purposes."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"preview_paths",children:"preview_paths"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"preview_paths(\nself )\n ->  List[List[Tuple[float, float]]]\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Generate an array of paths for the given layer. This will be used by the ",(0,i.jsx)(t.code,{children:"Plotter"}),"\nto generate a preview image of what will be plotted. Only looks at instructions during the ",(0,i.jsx)(t.code,{children:"plotting"}),"\nphase."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"List[List[Tuple[float, float]]]\nAn array of paths for the given layer."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"save",children:"save"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"save(\nself, file_path: str )\n ->  None\n"})}),"\n",(0,i.jsx)(t.p,{children:"Saves the layer instructions to a file at the specified file path."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Args:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"file_path (str) : The path to the file where the layer instructions will be saved."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"set_feed_rate",children:"set_feed_rate"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"set_feed_rate(\nself, feed_rate: float, instruction_phase: Union[Literal['setup'], Literal['plotting'], Literal['teardown']] = 'plotting' )\n ->  Self\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Set the speed at which the ",(0,i.jsx)(t.a,{href:"https://travisbumgarner.github.io/gcode2dplotterart/docs/documentation/terminology#plotting-instrument",children:"plotter head"}),"\nmoves."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Args:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["feed_rate (float) : The ",(0,i.jsx)(t.a,{href:"https://travisbumgarner.github.io/gcode2dplotterart/docs/documentation/terminology#feed-rate",children:"feed rate"})," to set."]}),"\n",(0,i.jsxs)(t.li,{children:["instruction_phase (",(0,i.jsx)(t.code,{children:"setup"})," | ",(0,i.jsx)(t.code,{children:"plotting"})," | ",(0,i.jsx)(t.code,{children:"teardown"}),", optional) : The\n",(0,i.jsx)(t.a,{href:"https://travisbumgarner.github.io/gcode2dplotterart/docs/documentation/terminology#instruction-phase",children:"instruction phase"}),"\nof plotting to send the instruction to. Defaults to ",(0,i.jsx)(t.code,{children:"plotting"}),"."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Layer : The Layer object. Allows for chaining of add methods."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"set_mode_to_navigation",children:"set_mode_to_navigation"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"set_mode_to_navigation(\nself, instruction_phase: Union[Literal['setup'], Literal['plotting'], Literal['teardown']] = 'plotting' )\n ->  Self\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Separate ",(0,i.jsx)(t.a,{href:"https://travisbumgarner.github.io/gcode2dplotterart/docs/documentation/terminology#plotting-instrument",children:"plotting instrument"}),"\nfrom ",(0,i.jsx)(t.a,{href:"https://travisbumgarner.github.io/gcode2dplotterart/docs/documentation/terminology#plotting-surface",children:"plotting surface"}),".\nShould be used once plotting a path is complete before moving on to the next path."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Args:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["instruction_phase (",(0,i.jsx)(t.code,{children:"setup"})," | ",(0,i.jsx)(t.code,{children:"plotting"})," | ",(0,i.jsx)(t.code,{children:"teardown"}),", optional) :\nThe ",(0,i.jsx)(t.a,{href:"https://travisbumgarner.github.io/gcode2dplotterart/docs/documentation/terminology#instruction-phase",children:"instruction phase"}),"\nof plotting to send the instruction to. Defaults to ",(0,i.jsx)(t.code,{children:"plotting"}),"."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Layer : The Layer object. Allows for chaining of add methods."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"set_mode_to_plotting",children:"set_mode_to_plotting"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"set_mode_to_plotting(\nself, instruction_phase: Union[Literal['setup'], Literal['plotting'], Literal['teardown']] = 'plotting' )\n ->  Self\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Connect ",(0,i.jsx)(t.a,{href:"https://travisbumgarner.github.io/gcode2dplotterart/docs/documentation/terminology#plotting-instrument",children:"plotting instrument"}),"\nto ",(0,i.jsx)(t.a,{href:"https://travisbumgarner.github.io/gcode2dplotterart/docs/documentation/terminology#plotting-instrument",children:"plotting surface"}),".\nShould be used when starting a path."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Args:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["instruction_phase (",(0,i.jsx)(t.code,{children:"setup"})," | ",(0,i.jsx)(t.code,{children:"plotting"})," | ",(0,i.jsx)(t.code,{children:"teardown"}),", optional) : The instruction\nphase of plotting to send the instruction to. Defaults to ",(0,i.jsx)(t.code,{children:"plotting"}),"."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Layer : The Layer object. Allows for chaining of add methods."}),"\n"]})]})}function c(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>s});var o=n(6540);const i={},r=o.createContext(i);function l(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);