"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1688],{733:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/example2-0fd7d5ea0fce5dfe0be18aa06b92a3e3.jpg"},834:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/example1-574130041c539300f015a217ffa9afe0.jpg"},1392:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"gallery/2023-07-15_bunch_of_lines","title":"2023-07-15 Bunch of Lines","description":"Convert an image into a wandering of parallel lines wandering where each line is one of N colors.","source":"@site/docs/gallery/2023-07-15_bunch_of_lines.mdx","sourceDirName":"gallery","slug":"/gallery/2023-07-15_bunch_of_lines","permalink":"/gcode2dplotterart/docs/gallery/2023-07-15_bunch_of_lines","draft":false,"unlisted":false,"editUrl":"https://github.com/TravisBumgarner/gcode2dplotterart/tree/main/gcode2dplotterart-website/docs/gallery/2023-07-15_bunch_of_lines.mdx","tags":[],"version":"current","frontMatter":{"description":"Convert an image into a wandering of parallel lines wandering where each line is one of N colors.","image":"/img/gallery/2023-07-15_bunch_of_lines/example1.jpg"},"sidebar":"tutorialSidebar","previous":{"title":"2023-06-20 Sine Waves","permalink":"/gcode2dplotterart/docs/gallery/2023-06-20_sine_waves"},"next":{"title":"2023-10-05 Roaming Rectangles","permalink":"/gcode2dplotterart/docs/gallery/2023-10-05_roaming_rectangles"}}');var r=t(4848),i=t(8453);const a={description:"Convert an image into a wandering of parallel lines wandering where each line is one of N colors.",image:"/img/gallery/2023-07-15_bunch_of_lines/example1.jpg"},l="2023-07-15 Bunch of Lines",s={},d=[{value:"Description",id:"description",level:2},{value:"Images",id:"images",level:2},{value:"Plotter Preview",id:"plotter-preview",level:2},{value:"Code",id:"code",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"2023-07-15-bunch-of-lines",children:"2023-07-15 Bunch of Lines"})}),"\n",(0,r.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)(n.p,{children:"Take in a color. Plot a bunch of lines in a grid with a fixed length and a variable slope."}),"\n",(0,r.jsx)(n.h2,{id:"images",children:"Images"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{alt:"example of plotted code",src:t(834).A+"",width:"1600",height:"1222"}),"\n",(0,r.jsx)(n.img,{alt:"example of plotted code",src:t(733).A+"",width:"1540",height:"1600"})]}),"\n",(0,r.jsx)(n.h2,{id:"plotter-preview",children:"Plotter Preview"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"preview screenshot",src:t(4569).A+"",width:"640",height:"480"})}),"\n",(0,r.jsx)(n.h2,{id:"code",children:"Code"}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsxs)(n.p,{children:["This code may or may not run and is intended more as a reference. Additionally, it was most likely not written with the latest version of the library. To ensure compatibility, check the date of this post against the ",(0,r.jsx)(n.a,{href:"https://pypi.org/project/gcode2dplotterart/#history",children:"version history"})," and install the corresponding version."]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'from gcode2dplotterart import Plotter2D\nfrom math import sin\nfrom random import randint\n\nplotter = Plotter2D(\n    title="Bunch of Lines",\n    x_min=0,\n    x_max=240,\n    y_min=0,\n    y_max=170,\n    feed_rate=10000,\n    output_directory="./output",\n    handle_out_of_bounds="Warning",\n)\n\nCOLORS = ["purple", "blue", "yellow"]\nHYPOTENUSE = 10\n\nfor color in COLORS:\n    plotter.add_layer(title=color, color=color)\n\nfor x0 in range(plotter.x_min, plotter.x_max, 10):\n    for y0 in range(plotter.y_min, plotter.y_max, 10):\n        slope = sin((x0**2 + y0**2) / (plotter.x_max**2 + plotter.y_max**2))\n\n        delta_x = HYPOTENUSE * (1 / (1 + slope**2)) ** 0.5\n        delta_y = delta_x * slope\n\n        x1 = x0 - delta_x\n        y1 = y0 - delta_y\n\n        x2 = x0 + delta_x\n        y2 = y0 + delta_y\n\n        rand = randint(0, len(COLORS))\n        if rand == len(COLORS):\n            # Every so often don\'t plot a line. For Art.\n            continue\n\n        plotter.layers[COLORS[rand]].add_line(x1, y1, x2, y2)\n\n\nplotter.preview()\nplotter.save()\n\n'})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},4569:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/preview-a5dfcd73e4d497e45e32c7b14fff8222.png"},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var o=t(6540);const r={},i=o.createContext(r);function a(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);