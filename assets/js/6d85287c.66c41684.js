"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[244],{5680:(e,t,n)=>{n.d(t,{xA:()=>s,yg:()=>m});var r=n(6540);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},_="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),_=p(n),y=i,m=_["".concat(l,".").concat(y)]||_[y]||d[y]||o;return n?r.createElement(m,a(a({ref:t},s),{},{components:n})):r.createElement(m,a({ref:t},s))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=y;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[_]="string"==typeof e?e:i,a[1]=c;for(var p=2;p<o;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},9791:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var r=n(9668),i=(n(6540),n(5680));const o={description:"Was aiming for something else, but ended up with this.",image:"/img/gallery/2023-12-06_happy_little_accident/id/example1.jpg"},a="2023-12-06 Happy Little Accident",c={unversionedId:"gallery/2023-12-06_happy_little_accident",id:"gallery/2023-12-06_happy_little_accident",title:"2023-12-06 Happy Little Accident",description:"Was aiming for something else, but ended up with this.",source:"@site/docs/gallery/2023-12-06_happy_little_accident.mdx",sourceDirName:"gallery",slug:"/gallery/2023-12-06_happy_little_accident",permalink:"/gcode2dplotterart/docs/gallery/2023-12-06_happy_little_accident",draft:!1,editUrl:"https://github.com/TravisBumgarner/gcode2dplotterart/tree/main/gcode2dplotterart-website/docs/gallery/2023-12-06_happy_little_accident.mdx",tags:[],version:"current",frontMatter:{description:"Was aiming for something else, but ended up with this.",image:"/img/gallery/2023-12-06_happy_little_accident/id/example1.jpg"},sidebar:"tutorialSidebar",previous:{title:"2023-11-28 Josef Albers Recursive Homage",permalink:"/gcode2dplotterart/docs/gallery/2023-11-28_josef_albers_recursive_homage"},next:{title:"2023-12-09 Bayer Pattern CMYK",permalink:"/gcode2dplotterart/docs/gallery/2023-12-09_bayer_patterns_cmyk"}},l={},p=[{value:"Description",id:"description",level:2},{value:"Images",id:"images",level:2},{value:"Plotter Preview",id:"plotter-preview",level:2},{value:"Code",id:"code",level:2}],s={toc:p},_="wrapper";function d(e){let{components:t,...o}=e;return(0,i.yg)(_,(0,r.A)({},s,o,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"2023-12-06-happy-little-accident"},"2023-12-06 Happy Little Accident"),(0,i.yg)("h2",{id:"description"},"Description"),(0,i.yg)("p",null,"Was aiming for something else, but ended up with this."),(0,i.yg)("h2",{id:"images"},"Images"),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"example of plotted code",src:n(5981).A,width:"1080",height:"1340"})),(0,i.yg)("h2",{id:"plotter-preview"},"Plotter Preview"),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"preview screenshot",src:n(5936).A,width:"988",height:"966"})),(0,i.yg)("h2",{id:"code"},"Code"),(0,i.yg)("admonition",{type:"warning"},(0,i.yg)("p",{parentName:"admonition"},"This code may or may not run and is intended more as a reference. Additionally, it was most likely not written with the latest version of the library. To ensure compatibility, check the date of this post against the ",(0,i.yg)("a",{parentName:"p",href:"https://pypi.org/project/gcode2dplotterart/#history"},"version history")," and install the corresponding version.")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-python"},'from gcode2dplotterart import Plotter2D\nimport math\n\nLINE_WIDTH = 0.5\nLAYER_0 = {"title": "black", "color": "black", "line_width": LINE_WIDTH}\n\nplotter = Plotter2D(\n    title="Expanding Shapes",\n    x_min=0,\n    x_max=180,\n    y_min=0,\n    y_max=180,\n    feed_rate=10000,\n    include_comments=False,\n)\nplotter.add_layer(**LAYER_0)\n\n\ndef is_point_in_circle(x, y, x_center, y_center, radius):\n    distance = math.sqrt((x - x_center) ** 2 + (y - y_center) ** 2)\n    return distance <= radius\n\n\ndef closest_point_on_circle_edge(x, y, x_center, y_center, radius):\n    vector_x = x - x_center\n    vector_y = y - y_center\n\n    distance = math.sqrt(vector_x**2 + vector_y**2)\n\n    normalized_vector_x = vector_x / distance\n    normalized_vector_y = vector_y / distance\n\n    closest_x = x_center + normalized_vector_x * radius\n    closest_y = y_center + normalized_vector_y * radius\n\n    return closest_x, closest_y\n\n\ndef point_along_line(x1, y1, x2, y2, hypotenuse):\n    print(x1, y1, x2, y2)\n    vector_x = x2 - x1\n    vector_y = y2 - y1\n\n    distance = math.sqrt(vector_x**2 + vector_y**2)\n\n    normalized_vector_x = vector_x / distance\n    normalized_vector_y = vector_y / distance\n\n    scaled_vector_x = normalized_vector_x * hypotenuse\n    scaled_vector_y = normalized_vector_y * hypotenuse\n\n    x3 = x1 + scaled_vector_x\n    y3 = y1 + scaled_vector_y\n\n    return x3, y3\n\n\ndef expand_path_outwards(path: list, x_center, y_center, radius) -> [list, bool]:\n    some_points_inside_circle = False\n    next_path = []\n\n    for point in path[0:-1]:\n        point_to_move_towards = closest_point_on_circle_edge(\n            point[0], point[1], x_center, y_center, radius\n        )\n\n        if point == point_to_move_towards:\n            next_path.append(point)\n            continue\n\n        next_point = point_along_line(\n            point[0],\n            point[1],\n            point_to_move_towards[0],\n            point_to_move_towards[1],\n            hypotenuse=1,\n        )\n\n        if is_point_in_circle(next_point[0], next_point[1], x_center, y_center, radius):\n            some_points_inside_circle = True\n            next_path.append(next_point)\n            point = next_point\n        else:\n            next_path.append(point)\n\n    next_path.append(path[0])\n    return [next_path, some_points_inside_circle]\n\n\ndef main():\n    x_center = (plotter.x_max - plotter.x_min) / 2\n    y_center = (plotter.y_max - plotter.y_min) / 2\n    radius = plotter.width / 2\n\n    current_path = [\n        (50, 50),\n        (50, 100),\n        (100, 100),\n        (100, 50),\n        (50, 50),\n    ]\n    plotter.layers[LAYER_0["title"]].add_path(current_path)\n\n    some_points_inside_circle = True\n    while some_points_inside_circle:\n        some_points_inside_circle = False\n        [next_path, some_points_inside_circle] = expand_path_outwards(\n            path=current_path, x_center=x_center, y_center=y_center, radius=radius\n        )\n\n        plotter.layers[LAYER_0["title"]].add_path(current_path)\n        current_path = next_path\n\n    plotter.preview()\n    plotter.save()\n\n\nif __name__ == "__main__":\n    main()\n')))}d.isMDXComponent=!0},5981:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/example1-1a525c215cd0b1fba5a740014235724e.jpg"},5936:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/preview-bc4ff738a27640a003ab2b21e14c197e.png"}}]);