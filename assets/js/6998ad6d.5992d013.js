"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[66],{5680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>m});var r=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),d=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(p.Provider,{value:t},e.children)},s="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),s=d(n),u=a,m=s["".concat(p,".").concat(u)]||s[u]||g[u]||o;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[s]="string"==typeof e?e:a,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var r=n(9668),a=(n(6540),n(5680));const o={sidebar_position:3},i="G-Code Overview",l={unversionedId:"documentation/gcode",id:"documentation/gcode",title:"G-Code Overview",description:"What is G-Code",source:"@site/docs/documentation/gcode.mdx",sourceDirName:"documentation",slug:"/documentation/gcode",permalink:"/gcode2dplotterart/docs/documentation/gcode",draft:!1,editUrl:"https://github.com/TravisBumgarner/gcode2dplotterart/tree/main/gcode2dplotterart-website/docs/documentation/gcode.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Convert a 3D printer to a 2D plotter",permalink:"/gcode2dplotterart/docs/documentation/convert-3d-to-2d"},next:{title:"Coding Tips",permalink:"/gcode2dplotterart/docs/documentation/code_tips"}},p={},d=[{value:"What is G-Code",id:"what-is-g-code",level:2},{value:"Library Instructions",id:"library-instructions",level:2},{value:"Comment",id:"comment",level:3},{value:"F",id:"f",level:3},{value:"G1",id:"g1",level:3},{value:"G4",id:"g4",level:3},{value:"G21",id:"g21",level:3},{value:"G28",id:"g28",level:3},{value:"M2",id:"m2",level:3},{value:"M3",id:"m3",level:3}],c={toc:d},s="wrapper";function g(e){let{components:t,...n}=e;return(0,a.yg)(s,(0,r.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"g-code-overview"},"G-Code Overview"),(0,a.yg)("h2",{id:"what-is-g-code"},"What is G-Code"),(0,a.yg)("p",null,"G-Code is the programming language of 2D plotters and 3D printers. It is a lower level programming language and therefore is typically difficult to understand. Below is a snippet of code to plot a rectangle. This library aims to abstract away these instructions so that more user friendly code, such as Python, can be used instead to generate G-Code. For more information on G"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-gcode"},"G21\nF10000\nM3 S0\nG1 X0.000 Y-50.000 F10000\nM3 S1000\nG04 P0.25\nG1 X0.000 Y0.000 F10000\nG1 X50.000 Y0.000 F10000\nG1 X50.000 Y-50.000 F10000\nM3 S0\nG04 P0.25\nM2\n")),(0,a.yg)("h2",{id:"library-instructions"},"Library Instructions"),(0,a.yg)("p",null,"Below are a collection of all the instructions used in this library. For a more thorough explanation, ",(0,a.yg)("a",{parentName:"p",href:"https://reprap.org/wiki/G-code"},"RepRap")," and ",(0,a.yg)("a",{parentName:"p",href:"https://marlinfw.org/meta/gcode/"},"Marlin")," are great (and dense) resources. "),(0,a.yg)("p",null,"The square braces indicate a variable that can be passed to the specific G-Code instructions. For example the instruction ",(0,a.yg)("inlineCode",{parentName:"p"},"G1 X[x] Y[y]")," takes in variables ",(0,a.yg)("inlineCode",{parentName:"p"},"x")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"y"),", which could result in a G-Code instruction looking like ",(0,a.yg)("inlineCode",{parentName:"p"},"G1 X10.0 Y5.0"),"."),(0,a.yg)("h3",{id:"comment"},"Comment"),(0,a.yg)("p",null,"Add a comment with a line starting with ",(0,a.yg)("inlineCode",{parentName:"p"},";"),". This instruction is not read by the plotting device."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-gcode"},";The following instruction lifts the pen up.\nM3 S0\n")),(0,a.yg)("h3",{id:"f"},"F"),(0,a.yg)("p",null,"Set the movement speed ",(0,a.yg)("inlineCode",{parentName:"p"},"f")," of the plotting device with ",(0,a.yg)("inlineCode",{parentName:"p"},"F[f]"),". Can also be attached to individual ",(0,a.yg)("a",{parentName:"p",href:"#g1"},"G1")," commands. "),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-gcode"},"F10000\n")),(0,a.yg)("h3",{id:"g1"},"G1"),(0,a.yg)("p",null," Move the plotting device to the specified ",(0,a.yg)("inlineCode",{parentName:"p"},"x")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"y")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"z")," coordinates at a speed of ",(0,a.yg)("inlineCode",{parentName:"p"},"f")," with ",(0,a.yg)("inlineCode",{parentName:"p"},"G1 X[x] Y[y] Z[z] F[f]"),". Not all of the coordinates are required. "),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-gcode"},"G1 X0.000 Y0.000 F10000\nG1 X50.000 F10000\nG1 Z10 F10000\nG1 X50.000 Y-50.000 F10000\n")),(0,a.yg)("h3",{id:"g4"},"G4"),(0,a.yg)("p",null,"Pause for a period of time ",(0,a.yg)("inlineCode",{parentName:"p"},"p")," with ",(0,a.yg)("inlineCode",{parentName:"p"},"G4 P[p]"),". This command is useful in combination with a move command. A pause after moving will give the plotting device a chance to stop any vibrating that might impact the plotting quality. "),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-gcode"},"; Lower plotter head\nM3 S1000\n; Pause for 0.25 seconds\nG4 P0.25\n;Point: 59.84807753012208, -48.2635182233307\nG1 X59.848 Y-48.264 F10000\n")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-gcode"},"G20\n")),(0,a.yg)("h3",{id:"g21"},"G21"),(0,a.yg)("p",null,"Sets the units of measurements to ",(0,a.yg)("inlineCode",{parentName:"p"},"mm"),"."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-gcode"},"G21\n")),(0,a.yg)("h3",{id:"g28"},"G28"),(0,a.yg)("p",null,"Home the plotting device. Will return the plotter to X = 0, Y = 0 and if supported, Z = 0. Not all plotting devices support this command."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-gcode"},"G28\n")),(0,a.yg)("h3",{id:"m2"},"M2"),(0,a.yg)("p",null,"Marks the end of the program execution."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-gcode"},"M2\n")),(0,a.yg)("h3",{id:"m3"},"M3"),(0,a.yg)("p",null,"For 2D plotters, used to raise and lower the plotter head. ",(0,a.yg)("inlineCode",{parentName:"p"},"M3 S0")," will raise the print and ",(0,a.yg)("inlineCode",{parentName:"p"},"M3 S1000")," will lower the plotter head."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-gcode"},"; Raise plotter head\nM3 S0\n; Move to first coordinate\nG1 X0.000 Y0.000 F10000\n; Lower the plotter head\nM3 S1000\n; Draw two lines\nG1 X50.000 Y0.000 F10000\nG1 X50.000 Y-50.000 F10000\n; Raise the plotter head on a 2D plotter, A `G1` command with `Z` height would be used here for a 3D printer.\nM3 S0\n")))}g.isMDXComponent=!0}}]);