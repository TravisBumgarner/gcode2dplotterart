"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[505],{5680:(e,t,n)=>{n.d(t,{xA:()=>d,yg:()=>h});var a=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},g="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),g=s(n),u=r,h=g["".concat(p,".").concat(u)]||g[u]||c[u]||o;return n?a.createElement(h,l(l({ref:t},d),{},{components:n})):a.createElement(h,l({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[g]="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2827:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var a=n(9668),r=(n(6540),n(5680));const o={sidebar_position:2},l="Quick start",i={unversionedId:"quickstart",id:"quickstart",title:"Quick start",description:"A video tutorial is also available. Run pip install gcode2dplotterart then head over to YouTube to watch the 2D Plotter or 3D Printer versions.",source:"@site/docs/quickstart.mdx",sourceDirName:".",slug:"/quickstart",permalink:"/gcode2dplotterart/docs/quickstart",draft:!1,editUrl:"https://github.com/TravisBumgarner/gcode2dplotterart/tree/main/gcode2dplotterart-website/docs/quickstart.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",next:{title:"Documentation",permalink:"/gcode2dplotterart/docs/category/documentation"}},p={},s=[{value:"0. Reference the Terminology",id:"0-reference-the-terminology",level:2},{value:"1. Install dependencies",id:"1-install-dependencies",level:2},{value:"2. Setup Hardware",id:"2-setup-hardware",level:2},{value:"2D plotter",id:"2d-plotter",level:3},{value:"3D printer",id:"3d-printer",level:3},{value:"3. Learn about UGS",id:"3-learn-about-ugs",level:2},{value:"4. Get Plotting Device Dimensions and Feed Rate",id:"4-get-plotting-device-dimensions-and-feed-rate",level:2},{value:"2D plotter",id:"2d-plotter-1",level:3},{value:"3D printer",id:"3d-printer-1",level:3},{value:"5. Add a layer",id:"5-add-a-layer",level:2},{value:"6. Add lines, shapes, and paths to the layers",id:"6-add-lines-shapes-and-paths-to-the-layers",level:2},{value:"7. Generate a preview",id:"7-generate-a-preview",level:2},{value:"8. Save layers to file",id:"8-save-layers-to-file",level:2},{value:"7. Plot",id:"7-plot",level:2},{value:"8. Read the documentation",id:"8-read-the-documentation",level:2},{value:"3D Printer",id:"3d-printer-2",level:3},{value:"2D Plotter",id:"2d-plotter-2",level:3},{value:"9. Next steps",id:"9-next-steps",level:2}],d={toc:s},g="wrapper";function c(e){let{components:t,...o}=e;return(0,r.yg)(g,(0,a.A)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"quick-start"},"Quick start"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("strong",{parentName:"strong"},(0,r.yg)("strong",{parentName:"strong"},(0,r.yg)("strong",{parentName:"strong"},(0,r.yg)("strong",{parentName:"strong"},(0,r.yg)("strong",{parentName:"strong"},(0,r.yg)("strong",{parentName:"strong"},"**"))))))),"A video tutorial is also available. Run ",(0,r.yg)("inlineCode",{parentName:"p"},"pip install gcode2dplotterart")," then head over to YouTube to watch the ",(0,r.yg)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=-7CjcRVRleQ&ab_channel=TravistheMaker"},"2D Plotter")," or 3D Printer versions. **"),(0,r.yg)("p",null,"This guide covers setup for both 2D plotter and 3D printers. Instructions at certain steps will differ based on if a 2D plotter or 3D printer is being used. Additionally, specific devices will require some extra setup steps and will be noted with an additional section of ",(0,r.yg)("strong",{parentName:"p"},"2D plotter")," or ",(0,r.yg)("strong",{parentName:"p"},"3D printer"),"."),(0,r.yg)("h2",{id:"0-reference-the-terminology"},"0. Reference the Terminology"),(0,r.yg)("p",null,"It is useful to keep the ",(0,r.yg)("a",{parentName:"p",href:"./documentation/terminology"},"terminology help doc")," open while reading through the quick start. "),(0,r.yg)("h2",{id:"1-install-dependencies"},"1. Install dependencies"),(0,r.yg)("p",null,"Install the Python package with ",(0,r.yg)("inlineCode",{parentName:"p"},"pip install gcode2dplotterart")," and the ",(0,r.yg)("a",{parentName:"p",href:"./documentation/ugs#installation"},"Universal G-Code Sender")," software."),(0,r.yg)("h2",{id:"2-setup-hardware"},"2. Setup Hardware"),(0,r.yg)("h3",{id:"2d-plotter"},"2D plotter"),(0,r.yg)("p",null,"No special setup required. "),(0,r.yg)("h3",{id:"3d-printer"},"3D printer"),(0,r.yg)("p",null,"Follow the guide to ",(0,r.yg)("a",{parentName:"p",href:"./documentation/convert-3d-to-2d"},"Convert a 3D printer to a 2D plotter"),"."),(0,r.yg)("h2",{id:"3-learn-about-ugs"},"3. Learn about UGS"),(0,r.yg)("p",null,"If the Universal G-Code Sender application has never been used before, it is recommended to read ",(0,r.yg)("a",{parentName:"p",href:"./documentation/ugs"},"this article"),"."),(0,r.yg)("h2",{id:"4-get-plotting-device-dimensions-and-feed-rate"},"4. Get Plotting Device Dimensions and Feed Rate"),(0,r.yg)("p",null,"The ",(0,r.yg)("a",{parentName:"p",href:"./documentation/terminology#plotting-device"},"plotting device"),"'s dimensions act as a constraint to make sure anything that is plotted in code will physically fit within the bounds of the plotting device. ",(0,r.yg)("a",{parentName:"p",href:"./documentation/ugs#get-the-plotting-devicess-dimensions"},"Get the plotting device's dimensions"),". "),(0,r.yg)("p",null,"The feed rate is a measure of how quickly the ",(0,r.yg)("a",{parentName:"p",href:"./documentation/terminology#plotter-head"},"plotter head")," can move. It's good to tweak this so that the plotting device moves not too fast that it'll create imperfections and not too slow that plotting takes forever. ",(0,r.yg)("a",{parentName:"p",href:"./documentation/ugs#get-the-plotting-devicess-feed-rate"},"Get the plotting device's feed rate"),"."),(0,r.yg)("p",null,"Fill in the plotting device's dimensions and feed rate below. "),(0,r.yg)("h3",{id:"2d-plotter-1"},"2D plotter"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},"from gcode2dplotterart import Plotter2D\n\nplotter=Plotter2D(\n  title=\"Plotter2D Quickstart\",\n  \n  # The following 4 values are from the `Get the plotting device's dimensions` article above. \n  x_min=0, # This will be the value `X-` or 0\n  x_max=200, # This will be the value `X+`\n  y_min=0, # This will be the value `Y-` or 0\n  y_max=200, # This will be the value `Y+` or 0\n  \n  # This value is from the `Get the plotting device's feed rate` article above.\n  feed_rate=0,\n\n  output_directory=\"./output\", \n  handle_out_of_bounds='Warning' # If a plotted point is outside of the bounds, give a warning, don't plot the point, and keep going.\n)\n")),(0,r.yg)("h3",{id:"3d-printer-1"},"3D printer"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},"from gcode2dplotterart import Plotter3D\n\nplotter=Plotter3D(\n  title=\"Plotter3D Quickstart\",\n  \n  # The following 6 values are from the `Get the plotting device's dimensions` article above. \n  x_min=0, # This will be the value `X-` or 0\n  x_max=200, # This will be the value `X+`\n  y_min=0, # This will be the value `Y-` or 0\n  y_max=200, # This will be the value `Y+` or 0\n  z_plotting_height=0, # This will be the value of `Z` that connects the plotter head to the plotting surface.\n  z_navigation_height=3, # This will be the value of `Z` that separate the plotter head from the plotting surface.\n\n  # This value is from the `Get the plotting device's feed rate` article above.\n  feed_rate=0,\n\n  output_directory=\"./output\", \n  handle_out_of_bounds='Warning' # If a plotted point is outside of the bounds, give a warning, don't plot the point, and keep going.\n)\n")),(0,r.yg)("h2",{id:"5-add-a-layer"},"5. Add a layer"),(0,r.yg)("p",null,"A layer is a group of ",(0,r.yg)("a",{parentName:"p",href:"./documentation/terminology#instruction"},"instructions")," that will be executed sequentially.  It usually makes sense to create layers based on the ",(0,r.yg)("a",{parentName:"p",href:"./documentation/terminology#plotting-instrument"},"plotting instruments")," being used. "),(0,r.yg)("p",null,"Several layers can be added to plot with different colors. The ",(0,r.yg)("inlineCode",{parentName:"p"},"color")," value is used to generate a preview before plotting. A hex color (such as ",(0,r.yg)("inlineCode",{parentName:"p"},"#00FF00"),") or human readable color name (see ",(0,r.yg)("a",{parentName:"p",href:"https://matplotlib.org/stable/gallery/color/named_colors.html#css-colors"},"MatplotLib")," for list of supported color names) can be used. "),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},'black_pen_layer = "black_pen_layer"\nblue_marker_layer = "blue_marker_layer"\ngreen_marker_layer = "green_marker_layer"\n\nplotter.add_layer(black_pen_layer, color="black", line_width=1.0)\nplotter.add_layer(blue_marker_layer, color="blue", line_width=4.0)\nplotter.add_layer(green_marker_layer, color="#027F00", line_width=4.0)\n')),(0,r.yg)("h2",{id:"6-add-lines-shapes-and-paths-to-the-layers"},"6. Add lines, shapes, and paths to the layers"),(0,r.yg)("p",null,"Once a layer is created, start appending instructions to that layer. Note that the points should fit inside the plotting device's bounds, or else warnings will be seen when executing the script."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},'plotter.layers[black_pen_layer].add_point(x=30, y=40)\nplotter.layers[blue_marker_layer].add_circle(x_center=10, y_center=30, radius=10)\nplotter.layers[blue_marker_layer].add_rectangle(x_start=50, y_start=50, x_end=75, y_end=75)\nplotter.layers[green_marker_layer].add_path([(10, 10), (20, 25), (30, 15), (1, 100)])\nplotter.layers[green_marker_layer].add_line(x_start=70, y_start=80, x_end=70, y_end=15)\nplotter.layers[green_marker_layer].add_text("hello world", x_start=10, y_start=10, font_size=10)\n\n')),(0,r.yg)("admonition",{type:"info"},(0,r.yg)("p",{parentName:"admonition"},(0,r.yg)("inlineCode",{parentName:"p"},"add_point"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"add_circle"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"add_rectangle"),", and other similar methods are all wrappers around ",(0,r.yg)("inlineCode",{parentName:"p"},"add_path"),". The ",(0,r.yg)("inlineCode",{parentName:"p"},"add_path")," method is the most flexible and can be used to create any path.")),(0,r.yg)("h2",{id:"7-generate-a-preview"},"7. Generate a preview"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},"plotter.preview()\n")),(0,r.yg)("p",null,"This will open up a preview of what will be plotted. This can be useful to spot check the G-Code instructions before plotting begins."),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"Preview screenshot",src:n(8732).A,width:"640",height:"480"})),(0,r.yg)("h2",{id:"8-save-layers-to-file"},"8. Save layers to file"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},"plotter.save()\n")),(0,r.yg)("p",null,"Inside the folder specified by the plotter's ",(0,r.yg)("inlineCode",{parentName:"p"},"output_directory")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"title")," there will be four files ",(0,r.yg)("inlineCode",{parentName:"p"},"preview.gcode"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"blue_marker_layer.gcode"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"black_pen_layer.gcode"),", and ",(0,r.yg)("inlineCode",{parentName:"p"},"green_marker_layer.gcode"),". Each of the files can be opened and the code browsed. The ",(0,r.yg)("a",{parentName:"p",href:"./documentation/gcode"},"G-Code Overview")," includes explanations of all of the instructions used in this library."),(0,r.yg)("h2",{id:"7-plot"},"7. Plot"),(0,r.yg)("admonition",{type:"danger"},(0,r.yg)("p",{parentName:"admonition"},"Be sure to ",(0,r.yg)("a",{parentName:"p",href:"documentation/ugs#reset-zero"},"Reset Zero")," every time the plotting device is powered on.")),(0,r.yg)("p",null,"In UGS, open up the ",(0,r.yg)("inlineCode",{parentName:"p"},"preview.gcode")," file. This won't plot anything but will give a preview of how large the plotting area will be. It's useful to run this command a few times to ensure that the ",(0,r.yg)("a",{parentName:"p",href:"./documentation/terminology#plotting-surface"},"plotting surface")," is where it's expected to be and things are aligned horizontally and vertically. Open the next gcode file for the first layer to be plotted. Attach the drawing instrument and begin plotting. Repeat the process for each layer."),(0,r.yg)("h2",{id:"8-read-the-documentation"},"8. Read the documentation"),(0,r.yg)("h3",{id:"3d-printer-2"},"3D Printer"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"./api/Plotter3D"},"Plotter3D")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"./api/Layer3D"},"Layer3D"))),(0,r.yg)("h3",{id:"2d-plotter-2"},"2D Plotter"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"./api/Plotter2D"},"Plotter2D")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"./api/Layer2D"},"Layer2D"))),(0,r.yg)("h2",{id:"9-next-steps"},"9. Next steps"),(0,r.yg)("p",null,"Check out the ",(0,r.yg)("a",{parentName:"p",href:"./documentation/plotting_tips"},"plotting tips")," and ",(0,r.yg)("a",{parentName:"p",href:"./documentation/code_tips"},"coding tips"),". Find some inspiration in the ",(0,r.yg)("a",{parentName:"p",href:"./category/gallery"},"plotting gallery"),"."),(0,r.yg)("p",null,"Create something cool? ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/TravisBumgarner/gcode2dplotterart/discussions/19"},"Share it here!")))}c.isMDXComponent=!0},8732:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/preview-482331decc5549e0b7126876ef16fca1.png"}}]);